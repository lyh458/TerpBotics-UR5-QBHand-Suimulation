<launch>
	<rosparam command="load" file="$(find ur5_qb_moveit_config)/config/joint_names.yaml"/>

	<include file="$(find ur5_qb_moveit_config)/launch/planning_context.launch">
		<arg name="load_robot_description" value="true" />
	</include>

	<include file="$(find ur5_qb_moveit_config)/launch/move_group.launch">
		<arg name="publish_monitored_planning_scene" value="true" />
	</include>

	<include file="$(find ur5_qb_moveit_config)/launch/moveit_rviz.launch">
		<arg name="config" value="true" />
	</include>

	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
		<param name="use_gui" value="false"/>
		<rosparam param="/source_list">[/joint_states]</rosparam>
	</node>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <arg name="paused" default="false"/>
  <arg name="gazebo_gui" default="true"/>
  <arg name="urdf_path" default="$(find ur5_qb_description)/urdf/ur5_qb.xacro"/>

  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="worlds/empty.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gazebo_gui)"/>
  </include>

  <!-- send robot urdf to param server -->
  <!-- <param name="robot_description" textfile="$(arg urdf_path)" /> -->

  <!-- push robot_description to factory and spawn robot in gazebo at the origin, change x,y,z arguments to spawn in a different position -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -x 0 -y 0 -z 0"
    respawn="false" output="screen" />

  <include file="$(find ur5_qb_moveit_config)/launch/ros_controllers.launch"/>

</launch>